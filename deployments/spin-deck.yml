apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "8"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1beta2","kind":"Deployment","metadata":{"annotations":{"moniker.spinnaker.io/application":"\"spin\"","moniker.spinnaker.io/cluster":"\"deck\""},"labels":{"app":"spin","app.kubernetes.io/managed-by":"halyard","app.kubernetes.io/name":"deck","app.kubernetes.io/part-of":"spinnaker","app.kubernetes.io/version":"1.13.3","cluster":"spin-deck"},"name":"spin-deck","namespace":"spinnaker"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"spin","cluster":"spin-deck"}},"template":{"metadata":{"annotations":{},"labels":{"app":"spin","app.kubernetes.io/managed-by":"halyard","app.kubernetes.io/name":"deck","app.kubernetes.io/part-of":"spinnaker","app.kubernetes.io/version":"1.13.3","cluster":"spin-deck"}},"spec":{"containers":[{"env":[{"name":"AUTH_ENABLED","value":"false"},{"name":"FIAT_ENABLED","value":"false"}],"image":"gcr.io/spinnaker-marketplace/deck:2.8.3-20190406050308","lifecycle":{},"name":"deck","ports":[{"containerPort":9000}],"readinessProbe":{"tcpSocket":{"port":9000}},"resources":{"limits":{},"requests":{}},"securityContext":null,"volumeMounts":[{"mountPath":"/opt/spinnaker/config","name":"spin-deck-files-41521974"}]}],"imagePullSecrets":[],"terminationGracePeriodSeconds":60,"volumes":[{"name":"spin-deck-files-41521974","secret":{"secretName":"spin-deck-files-41521974"}}]}}}}
    moniker.spinnaker.io/application: '"spin"'
    moniker.spinnaker.io/cluster: '"deck"'
  creationTimestamp: null
  generation: 1
  labels:
    app: spin
    app.kubernetes.io/managed-by: halyard
    app.kubernetes.io/name: deck
    app.kubernetes.io/part-of: spinnaker
    app.kubernetes.io/version: 1.13.3
    cluster: spin-deck
  name: spin-deck
  selfLink: /apis/extensions/v1beta1/namespaces/spinnaker/deployments/spin-deck
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: spin
      cluster: spin-deck
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: spin
        app.kubernetes.io/managed-by: halyard
        app.kubernetes.io/name: deck
        app.kubernetes.io/part-of: spinnaker
        app.kubernetes.io/version: 1.13.3
        cluster: spin-deck
    spec:
      containers:
      - env:
        - name: AUTH_ENABLED
          value: "false"
        - name: FIAT_ENABLED
          value: "false"
        image: docker.io/yangkai/deck:latest
        imagePullPolicy: Never
        lifecycle: {}
        name: deck
        ports:
        - containerPort: 9000
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 9000
          timeoutSeconds: 1
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/spinnaker/config
          name: spin-deck-files-41521974
      dnsPolicy: ClusterFirst
      hostAliases:
      - hostnames:
        - spin-gate.bigtree.com
        ip: 172.16.108.12
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 60
      volumes:
      - name: spin-deck-files-41521974
        secret:
          defaultMode: 420
          secretName: spin-deck-files-41521974
status: {}
